---
ReportDefinitions:
- reportName: UlbWiseSewerageChargeCollection
  summary: State Wide Sewerage Charge Collection
  version: 1.0.0
  moduleName: rainmaker-sw
  sourceColumns:
  - name: ulb
    label: ULB
    type: string
    source: pt
    total: false
  - name: ward
    label: Ward
    type: string
    source: pt
    total: false
  - name: connectionno
    label: Connection No
    type: string
    source: pt
    total: false
  - name: oldconnectionno
    label: Old Connection No
    type: string
    source: pt
    total: false
  - name: connectiontype
    label: Connection Type
    type: string
    source: pt
    total: false
  - name: totaltaxamt
    label: Total Demand Amount
    type: string
    source: pt
    total: true
  - name: totalcollectedamt
    label: Collected Amount
    type: string
    source: pt
    total: true
  - name: dueAmount
    label: Due Amount
    type: string
    source: pt
    total: true
  searchParams:
  - name: ulb
    label: ULB Name
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND ewc.tenantid = $ulb
  - name: ward
    label: Ward
    type: string
    source: pt
    isMandatory: false
    searchClause: AND EWC.additionaldetails->>'ward'=$ward
  query: |
      SELECT Initcap(Split_part(ewc.tenantid, '.', 2)) AS ulb,EWC.ADDITIONALDETAILS->>'ward' AS WARD,EWC.connectionno,EWC.oldconnectionno,EWS.connectiontype,COALESCE(DM.totaltaxamt, 0) AS TOTALTAXAMT,COALESCE(DM.totalcollectedamt, 0) AS TOTALCOLLECTEDAMT,COALESCE(DM.totaltaxamt, 0) - COALESCE(DM.totalcollectedamt, 0) AS DUEAMOUNT FROM   eg_sw_connection EWC INNER JOIN eg_sw_service EWS ON EWC.id = EWS.connection_id LEFT OUTER JOIN (SELECT EDV.consumercode,Sum(EDV2.taxamount) AS TOTALTAXAMT,Sum(EDV2.collectionamount) AS TOTALCOLLECTEDAMT FROM egbs_demand_v1 EDV INNER JOIN egbs_demanddetail_v1 EDV2 ON EDV.id = EDV2.demandid GROUP  BY EDV.consumercode) DM ON EWC.connectionno = DM.consumercode WHERE  EWC.applicationstatus = 'CONNECTION_ACTIVATED' AND EWC.isoldapplication = false
  orderby: ORDER BY ewc.tenantid DESC NULLS LAST

- reportName: SewerageConnectionWiseDemandDetailsReport
  summary: Sewerage Connection wise Demand Details Report
  version: 1.0.0
  moduleName: rainmaker-sw
  sourceColumns:
  - name: ulb
    label: ULB
    type: string
    source: pt
    total: false
  - name: ward
    label: Ward
    type: string
    source: pt
    total: false
  - name: connectionno
    label: Connection No
    type: string
    source: pt
    total: false
  - name: oldconnectionno
    label: Old Connection No
    type: string
    source: pt
    total: false
  - name: totaltaxamt
    label: Total Demand Amount
    type: string
    source: pt
    total: true
  - name: totalcollectedamt
    label: Paid Amount
    type: string
    source: pt
    total: true
  - name: dueAmount
    label: Due Amount
    type: string
    source: pt
    total: true
  - name: REMAININGBAL
    label: Remaining Balance
    type: string
    source: pt
    total: true
  searchParams:
  - name: ulb
    label: ULB Name
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    source: pt
    wrapper: true
    isMandatory: true
    searchClause: AND ewc.tenantid = $ulb
  - name: ward
    label: Ward
    type: string
    source: pt
    isMandatory: false
    searchClause: AND EWC.additionaldetails->>'ward'=$ward
  - name: connectionno
    label: Connection No
    type: string
    source: pt
    isMandatory: false
    searchClause: AND ewc.connectionno = $connectionno
  - name: oldconnectionno
    label: Old Connection No
    type: string
    source: pt
    isMandatory: false
    searchClause: AND ewc.oldconnectionno = $oldconnectionno
  query: |
      select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2)) as ULB,EWC.ADDITIONALDETAILS->>'ward' AS WARD, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, coalesce(DM.TOTALTAXAMT, 0) as TOTALTAXAMT, coalesce(DM.TOTALCOLLECTEDAMT, 0) as TOTALCOLLECTEDAMT, case when coalesce(DM.TOTALTAXAMT, 0) > coalesce(DM.TOTALCOLLECTEDAMT, 0) then coalesce(DM.TOTALTAXAMT, 0) - coalesce(DM.TOTALCOLLECTEDAMT, 0) else 0 end as DUEAMOUNT, case when coalesce(DM.TOTALCOLLECTEDAMT, 0) > coalesce(DM.TOTALTAXAMT, 0) then coalesce(DM.TOTALCOLLECTEDAMT, 0) - coalesce(DM.TOTALTAXAMT, 0) else 0 end as REMAININGBAL from EG_SW_CONNECTION EWC inner join EG_SW_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join (select EDV.CONSUMERCODE, SUM(EDV2.TAXAMOUNT) as TOTALTAXAMT, SUM(EDV2.COLLECTIONAMOUNT) as TOTALCOLLECTEDAMT from EGBS_DEMAND_V1 EDV inner join EGBS_DEMANDDETAIL_V1 EDV2 on EDV.ID = EDV2.DEMANDID group by EDV.CONSUMERCODE) DM on EWC.connectionno = DM.CONSUMERCODE where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED'

- reportName: ConnectionWiseDemandsReport
  summary: Connection wise Demands Report
  version: 1.0.0
  moduleName: rainmaker-sw
  sourceColumns:
  - name: ulb
    label: ULB
    type: string
    source: pt
    total: false
  - name: ward
    label: Ward
    type: string
    source: pt
    total: false
  - name: connectionno
    label: Connection No
    type: string
    source: pt
    total: false
  - name: oldconnectionno
    label: Old Connection No
    type: string
    source: pt
    total: false
  - name: demandcreationdate
    label: Demand Generation Date
    type: string
    source: pt
    total: false
  - name: taxperiodfrom
    label: Tax Period From
    type: string
    source: pt
    total: false
  - name: taxperiodto
    label: Tax Period To
    type: string
    source: pt
    total: false
  - name: totaltaxamt
    label: Total Demand Amount
    type: string
    source: pt
    total: true
  - name: totalcollectedamt
    label: Paid Amount
    type: string
    source: pt
    total: true
  - name: dueAmount
    label: Due Amount
    type: string
    source: pt
    total: true
  - name: REMAININGBAL
    label: Remaining Balance
    type: string
    source: pt
    total: true
  searchParams:
  - name: ulb
    label: ULB Name
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    source: pt
    wrapper: true
    isMandatory: true
    searchClause: AND ewc.tenantid = $ulb
  - name: connectionno
    label: Connection No
    type: string
    source: pt
    isMandatory: true
    searchClause: AND ewc.connectionno = $connectionno
  - name: oldconnectionno
    label: Old Connection No
    type: string
    source: pt
    isMandatory: false
    searchClause: AND ewc.oldconnectionno = $oldconnectionno
  query: |
      select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, DM.DEMANDCREATIONDATE, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.TOTALTAXAMT, DM.TOTALCOLLECTEDAMT,case when coalesce(DM.TOTALTAXAMT, 0) > coalesce(DM.TOTALCOLLECTEDAMT, 0) then coalesce(DM.TOTALTAXAMT, 0) - coalesce(DM.TOTALCOLLECTEDAMT, 0) else 0 end as DUEAMOUNT,case when coalesce(DM.TOTALCOLLECTEDAMT, 0) > coalesce(DM.TOTALTAXAMT, 0) then coalesce(DM.TOTALCOLLECTEDAMT, 0) - coalesce(DM.TOTALTAXAMT, 0) else 0 end as REMAININGBAL from EG_SW_CONNECTION EWC inner join EG_SW_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.TOTALTAXAMT, edv2.TOTALCOLLECTEDAMT, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select demandid, SUM(TAXAMOUNT)as TOTALTAXAMT, SUM(COLLECTIONAMOUNT)as TOTALCOLLECTEDAMT from EGBS_DEMANDDETAIL_V1 group by demandid)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'SW'